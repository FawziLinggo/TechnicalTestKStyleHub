basePath: /
definitions:
  presenters.BasicResponse:
    description: General basic response
    properties:
      data:
        $ref: '#/definitions/presenters.CreateEditResponse'
      error:
        description: Error will be empty if SUCCESS
        example: ERROR or NULL
        type: string
      message:
        example: FAILED or SUCCESS and etc
        type: string
      status:
        description: Status turn true if process SUCCESS
        example: false
        type: boolean
    type: object
  presenters.CancelLikeReviewRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  presenters.CreateEditResponse:
    properties:
      id:
        type: string
      value: {}
    type: object
  presenters.CreateLikeReviewRequest:
    properties:
      member_id:
        type: string
      product_review_id:
        type: string
    required:
    - member_id
    - product_review_id
    type: object
  presenters.CreateMemberRequest:
    properties:
      gender:
        example: male
        type: string
      skin_color:
        example: white
        type: string
      skin_type:
        example: oily
        type: string
      username:
        type: string
    required:
    - gender
    - skin_color
    - skin_type
    - username
    type: object
  presenters.CreateProductRequest:
    properties:
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  presenters.CreateProductReviewRequest:
    properties:
      desc_review:
        type: string
      member_id:
        type: string
      product_id:
        type: string
    required:
    - desc_review
    - member_id
    - product_id
    type: object
  presenters.DataReview:
    properties:
      desc_review:
        example: It's good
        type: string
      gender:
        example: male
        type: string
      skin_color:
        example: light
        type: string
      skin_type:
        example: oily
        type: string
      total_like:
        example: 1
        type: integer
      username:
        example: fawzi
        type: string
    type: object
  presenters.EditMemberByIDRequest:
    properties:
      gender:
        example: male
        type: string
      id:
        type: string
      skin_color:
        example: white
        type: string
      skin_type:
        example: oily
        type: string
      username:
        type: string
    required:
    - gender
    - id
    - skin_color
    - skin_type
    - username
    type: object
  presenters.EditProductByIDRequest:
    properties:
      id:
        type: string
      name:
        type: string
      price:
        type: number
    required:
    - id
    - name
    - price
    type: object
  presenters.EditProductReviewByIDRequest:
    properties:
      desc_review:
        type: string
      id:
        type: string
      member_id:
        type: string
      product_id:
        type: string
    required:
    - desc_review
    - id
    - member_id
    - product_id
    type: object
  presenters.GetMemberResponse:
    properties:
      gender:
        example: male
        type: string
      id:
        example: c836c745-e1db-4777-9699-e40fffaa302d
        type: string
      skin_color:
        example: white
        type: string
      skin_type:
        example: oily
        type: string
      username:
        example: fawzi
        type: string
    type: object
  presenters.GetProductByIDResponse:
    properties:
      data_reviews:
        items:
          $ref: '#/definitions/presenters.DataReview'
        type: array
      id:
        example: c836c745-e1db-4777-9699-e40fffaa302d
        type: string
      name:
        example: Product 1
        type: string
      price:
        example: 100000
        type: number
      total_like_review:
        example: 100
        type: integer
    type: object
  presenters.GetProductResponse:
    properties:
      id:
        example: c836c745-e1db-4777-9699-e40fffaa302d
        type: string
      name:
        example: Product 1
        type: string
      price:
        example: 100000
        type: number
    type: object
  presenters.GetProductReviewResponse:
    properties:
      desc_review:
        example: Product 1
        type: string
      id:
        example: c836c745-e1db-4777-9699-e40fffaa302d
        type: string
      member_id:
        example: c836c745-e1db-4777-9699-e40fffaa302d
        type: string
      product_id:
        example: c836c745-e1db-4777-9699-e40fffaa302d
        type: string
    type: object
host: localhost
info:
  contact:
    email: fawzilinggo@google.com
    name: Fawzi Linggo
  description: Technical Test KStyle Hub Backend API docs
  title: Technical Test KStyle Hub API Backend
  version: "1.0"
paths:
  /member:
    delete:
      consumes:
      - application/json
      description: Delete Member By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Delete Member By ID
      tags:
      - Member
    get:
      consumes:
      - application/json
      description: Get All Member
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenters.GetMemberResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Get All Member
      tags:
      - Member
    post:
      consumes:
      - application/json
      description: Create Member
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.CreateMemberRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Create Member
      tags:
      - Member
    put:
      consumes:
      - application/json
      description: Edit Member By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.EditMemberByIDRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Edit Member By ID
      tags:
      - Member
  /product:
    delete:
      consumes:
      - application/json
      description: Delete Product By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Delete Product By ID
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get All Product
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenters.GetProductResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Get All Product
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.CreateProductRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Create Product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Edit Product By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.EditProductByIDRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Edit Product By ID
      tags:
      - Product
  /product/{id}:
    get:
      consumes:
      - application/json
      description: Get Product By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.GetProductByIDResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Get Product By ID
      tags:
      - Product
  /product/reveiw:
    post:
      consumes:
      - application/json
      description: Create Product Review
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.CreateProductReviewRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Create Product Review
      tags:
      - ProductReview
  /product/review:
    delete:
      consumes:
      - application/json
      description: Delete ProductReview By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Delete ProductReview By ID
      tags:
      - ProductReview
    get:
      consumes:
      - application/json
      description: Get All ProductReview
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenters.GetProductReviewResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Get All ProductReview
      tags:
      - ProductReview
    put:
      consumes:
      - application/json
      description: Edit ProductReview By ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.EditProductReviewByIDRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Edit ProductReview By ID
      tags:
      - ProductReview
  /product/review/cancel-like:
    delete:
      consumes:
      - application/json
      description: Delete LikeReview
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.CancelLikeReviewRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Delete LikeReview
      tags:
      - LikeReview
  /product/review/like:
    post:
      consumes:
      - application/json
      description: Create LikeReview
      parameters:
      - description: Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenters.CreateLikeReviewRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/presenters.BasicResponse'
      summary: Create LikeReview
      tags:
      - LikeReview
schemes:
- http
swagger: "2.0"
